#!/bin/bash

#to kill child process on ctrl+c
trap "kill 0" SIGINT

srcHash=0
inpHash=1

tempInpHash=1
tempSrcHash=1

inputFile=""
file=""
extension=""

#holds pid of childprocess which runs the executable file
outputChild=""

file="$1"

if [ -z "$file" ]
then
	echo "Please specify source file.Error Exiting..."
	exit
fi

if [ ! -e "$file" ]
then
	echo "Source file doesn't exist.Error Exiting..."
	exit
fi

#handling fileExtension for make
fileName=`echo $file | cut -d "." -f 1`
extension=`echo $file | cut -d "." -f 2`

#check if extension is present, second check is required if no '.' is present
if [ -z "$extension" ] || [ "$extension" == "$fileName" ]
then
	echo "No file extension present?Exiting..."
	exit
fi
#iterate through arguments and set options
while [ -n "$2" ]
do
	case $2 in
		"-i") 
			shift
				if [ -e "$2" ]
				then
					inputFile="$2"
				else
					echo "The input file doesn't exist.Exiting.."
					exit
				fi
			;;
	esac
	shift
done

while [ true ]
do
	#tempSrcHash and temoInpHash to hold the intermediate hash to compare with previous hash of the file to detect change in src and input
	tempSrcHash=`shasum $file`
	if [ ! -z "$inputFile" ]
	then
		tempInpHash=`shasum $inputFile`
	fi

	#checks for change either in source or input files
	if [ "$srcHash" != "$tempSrcHash" ] || [ "$inpHash" != "$tempInpHash" ]
	then
		if [ ! -z "$outputChild" ]
		then
			kill "$outputChild"		
			outputChild=""
		fi
		#clears screen for output
		reset

		#compiles according to fileExtension
		make $fileName
		echo "Compiled at `date`"
	
		#if no input file is given , inpHash == tempInpHash == 1 holds forever	
		if [ ! -z "$inputFile" ]
		then
			inpHash="$tempInpHash"
		fi
	
		if [ -e "$fileName" ]
		then
			cat $inputFile | "./$fileName" &
			outputChild=$!
		fi
		
		srcHash="$tempSrcHash"
	fi
	sleep 2
done

